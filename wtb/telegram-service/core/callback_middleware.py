from aiogram import types, Bot
from aiogram.dispatcher.middlewares import BaseMiddleware
from aiogram.types import ParseMode, InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
from io import BytesIO
import logging

from utils.bd import get_user_config, create_new_config, get_config_from_wireguard
from utils.qr import generate_config_qr

class CallbackMiddleware(BaseMiddleware):
    """Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–ª–±—ç–∫–æ–≤ –Ω–∞–ø—Ä—è–º—É—é."""
    
    def __init__(self, bot: Bot, logger):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç middleware —Å –æ–±—ä–µ–∫—Ç–æ–º –±–æ—Ç–∞ –∏ –ª–æ–≥–≥–µ—Ä–æ–º."""
        self.bot = bot
        self.logger = logger
        super(CallbackMiddleware, self).__init__()
    
    async def on_pre_process_callback_query(self, callback_query: types.CallbackQuery, data: dict):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–±—ç–∫–∏ –ø–µ—Ä–µ–¥ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏–µ–π."""
        self.logger.info(f"Middleware: –ø–æ–ª—É—á–µ–Ω –∫–æ–ª–±—ç–∫ {callback_query.data}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ direct_create
        if callback_query.data == "direct_create":
            self.logger.info("Middleware: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ direct_create")
            
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –æ–∂–∏–¥–∞–Ω–∏—è
            await self.bot.answer_callback_query(callback_query.id)
            user_id = callback_query.from_user.id
            
            # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è
            await self.bot.edit_message_text(
                "üîÑ *–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...*\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode=ParseMode.MARKDOWN
            )
            
            try:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                config_data = await create_new_config(user_id)
                
                if "error" in config_data:
                    await self.bot.edit_message_text(
                        f"‚ùå *–û—à–∏–±–∫–∞!*\n\n{config_data['error']}",
                        chat_id=callback_query.message.chat.id,
                        message_id=callback_query.message.message_id,
                        parse_mode=ParseMode.MARKDOWN
                    )
                    # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π - –ù–ï–°–ö–û–õ–¨–ö–ò–ú–ò –°–ü–û–°–û–ë–ê–ú–ò –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ—à–∏–±–∫–∏ aiogram
                    data['_handled'] = True
                    callback_query._handled = True
                    return True
                
                config_text = config_data.get("config_text")
                
                if not config_text:
                    await self.bot.edit_message_text(
                        "‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                        chat_id=callback_query.message.chat.id,
                        message_id=callback_query.message.message_id,
                        parse_mode=ParseMode.MARKDOWN
                    )
                    # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π - –ù–ï–°–ö–û–õ–¨–ö–ò–ú–ò –°–ü–û–°–û–ë–ê–ú–ò –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ—à–∏–±–∫–∏ aiogram
                    data['_handled'] = True
                    callback_query._handled = True
                    return True
                
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ä–æ–∫–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                db_data = await get_user_config(user_id)
                
                expiry_text = ""
                if db_data:
                    expiry_time = db_data.get("expiry_time")
                    if expiry_time:
                        expiry_dt = datetime.fromisoformat(expiry_time)
                        expiry_formatted = expiry_dt.strftime("%d.%m.%Y %H:%M:%S")
                        expiry_text = f"‚ñ´Ô∏è –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ *{expiry_formatted}*\n"
                
                # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                config_file = BytesIO(config_text.encode('utf-8'))
                config_file.name = f"vpn_duck_{user_id}.conf"
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
                qr_buffer = await generate_config_qr(config_text)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏
                await self.bot.edit_message_text(
                    f"‚úÖ *–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!*\n\n"
                    f"{expiry_text}\n"
                    f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ QR-–∫–æ–¥ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.",
                    chat_id=callback_query.message.chat.id,
                    message_id=callback_query.message.message_id,
                    parse_mode=ParseMode.MARKDOWN
                )
                
                if qr_buffer:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
                    await self.bot.send_photo(
                        user_id,
                        qr_buffer,
                        caption="üîë *QR-–∫–æ–¥ –≤–∞—à–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard*\n\n"
                                "–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ WireGuard –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.",
                        parse_mode=ParseMode.MARKDOWN
                    )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                await self.bot.send_document(
                    user_id,
                    config_file,
                    caption="üìã *–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard*\n\n"
                            "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.",
                    parse_mode=ParseMode.MARKDOWN
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                instructions_text = (
                    "üì± *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:*\n\n"
                    "1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ\n"
                    "2Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '+'\n"
                    "3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ '–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥' –∏–ª–∏ '–ò–º–ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞'\n"
                    "4Ô∏è‚É£ –ü–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n"
                    "–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–æ VPN Duck ü¶Ü"
                )
                
                keyboard = InlineKeyboardMarkup(row_width=1)
                keyboard.add(
                    InlineKeyboardButton("‚è∞ –ü—Ä–æ–¥–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", callback_data="start_extend")
                )
                
                await self.bot.send_message(
                    user_id,
                    instructions_text,
                    parse_mode=ParseMode.MARKDOWN,
                    reply_markup=keyboard
                )
                
                # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π - –ù–ï–°–ö–û–õ–¨–ö–ò–ú–ò –°–ü–û–°–û–ë–ê–ú–ò –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ—à–∏–±–∫–∏ aiogram
                data['_handled'] = True
                callback_query._handled = True
                return True
                
            except Exception as e:
                self.logger.error(f"Middleware: –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}")
                await self.bot.edit_message_text(
                    "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞*\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    chat_id=callback_query.message.chat.id,
                    message_id=callback_query.message.message_id,
                    parse_mode=ParseMode.MARKDOWN
                )
                
                # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π - –ù–ï–°–ö–û–õ–¨–ö–ò–ú–ò –°–ü–û–°–û–ë–ê–ú–ò
                data['_handled'] = True
                callback_query._handled = True
                return True
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ direct_cancel
        elif callback_query.data == "direct_cancel":
            self.logger.info("Middleware: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ direct_cancel")
            
            await self.bot.answer_callback_query(callback_query.id)
            
            await self.bot.edit_message_text(
                "‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id
            )
            
            # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π - –ù–ï–°–ö–û–õ–¨–ö–ò–ú–ò –°–ü–û–°–û–ë–ê–ú–ò
            data['_handled'] = True
            callback_query._handled = True
            return True
            
        # –î–û–ë–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ get_config
        elif callback_query.data == "get_config":
            self.logger.info("Middleware: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ get_config")
            
            await self.bot.answer_callback_query(callback_query.id)
            user_id = callback_query.from_user.id
            
            try:
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                config_data = await get_config_from_wireguard(user_id)
                
                if "error" in config_data:
                    await self.bot.send_message(
                        user_id,
                        f"‚ö†Ô∏è *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n{config_data['error']}",
                        parse_mode=ParseMode.MARKDOWN
                    )
                    data['_handled'] = True
                    callback_query._handled = True
                    return True
                
                config_text = config_data.get("config_text")
                
                if not config_text:
                    await self.bot.send_message(
                        user_id,
                        "‚ö†Ô∏è *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n"
                        "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /create.",
                        parse_mode=ParseMode.MARKDOWN
                    )
                    data['_handled'] = True
                    callback_query._handled = True
                    return True
                
                # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                config_file = BytesIO(config_text.encode('utf-8'))
                config_file.name = f"vpn_duck_{user_id}.conf"
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
                qr_buffer = await generate_config_qr(config_text)
                
                if qr_buffer:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
                    await self.bot.send_photo(
                        user_id,
                        qr_buffer,
                        caption="üîë *QR-–∫–æ–¥ –≤–∞—à–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard*\n\n"
                                "–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ WireGuard –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.",
                        parse_mode=ParseMode.MARKDOWN
                    )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                await self.bot.send_document(
                    user_id,
                    config_file,
                    caption="üìã *–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard*\n\n"
                            "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.",
                    parse_mode=ParseMode.MARKDOWN
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                instructions_text = (
                    "üì± *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:*\n\n"
                    "1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ\n"
                    "2Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '+'\n"
                    "3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ '–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥' –∏–ª–∏ '–ò–º–ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞'\n"
                    "4Ô∏è‚É£ –ü–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n"
                    "–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–æ VPN Duck ü¶Ü"
                )
                
                await self.bot.send_message(
                    user_id,
                    instructions_text,
                    parse_mode=ParseMode.MARKDOWN
                )
                
                # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
                data['_handled'] = True
                callback_query._handled = True
                return True
                
            except Exception as e:
                self.logger.error(f"Middleware: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}")
                await self.bot.send_message(
                    user_id,
                    "‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    parse_mode=ParseMode.MARKDOWN
                )
                
                # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
                data['_handled'] = True
                callback_query._handled = True
                return True
            
        # –ö–æ–ª–±—ç–∫–∏ –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –º—ã –ù–ï –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤ middleware
        elif callback_query.data == "start_extend":
            self.logger.info("Middleware: –ø–æ–ª—É—á–µ–Ω –∫–æ–ª–±—ç–∫ start_extend")
            # –≠—Ç–æ—Ç –∫–æ–ª–±—ç–∫ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            pass

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–∞ status
        elif callback_query.data == "status":
            self.logger.info("Middleware: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ status")
            
            await self.bot.answer_callback_query(callback_query.id)
            user_id = callback_query.from_user.id
            
            try:
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                config = await get_user_config(user_id)
                
                if config and config.get("active", False):
                    # –ü–∞—Ä—Å–∏–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                    created_at = datetime.fromisoformat(config.get("created_at")).strftime("%d.%m.%Y %H:%M:%S")
                    expiry_time = datetime.fromisoformat(config.get("expiry_time"))
                    expiry_formatted = expiry_time.strftime("%d.%m.%Y %H:%M:%S")
                    
                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
                    now = datetime.now()
                    remaining_time = expiry_time - now
                    remaining_days = remaining_time.days
                    remaining_hours = remaining_time.seconds // 3600
                    
                    await self.bot.send_message(
                        user_id,
                        f"üìä *–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n"
                        f"‚ñ´Ô∏è –ê–∫—Ç–∏–≤–Ω–∞: *–î–∞*\n"
                        f"‚ñ´Ô∏è –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ *{expiry_formatted}*\n"
                        f"‚ñ´Ô∏è –û—Å—Ç–∞–ª–æ—Å—å: *{remaining_days} –¥–Ω. {remaining_hours} —á.*\n",
                        parse_mode=ParseMode.MARKDOWN
                    )
                else:
                    await self.bot.send_message(
                        user_id,
                        "‚ùå *–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n"
                        "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /create.",
                        parse_mode=ParseMode.MARKDOWN
                    )
                    
                # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
                data['_handled'] = True
                callback_query._handled = True
                return True
            except Exception as e:
                self.logger.error(f"Middleware: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}")
                await self.bot.send_message(
                    user_id,
                    "‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏*\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    parse_mode=ParseMode.MARKDOWN
                )
                
                # –ü–æ–º–µ—á–∞–µ–º –∫–æ–ª–±—ç–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
                data['_handled'] = True
                callback_query._handled = True
                return True

        return None  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏