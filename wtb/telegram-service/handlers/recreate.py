from aiogram import types, Dispatcher
from aiogram.types import ParseMode, InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
from io import BytesIO

from core.settings import bot, logger
from keyboards.keyboards import get_recreate_confirm_keyboard 
from utils.bd import recreate_config, get_user_config, get_available_geolocations
from utils.qr import generate_config_qr

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
async def recreate_config_handler(callback_query: types.CallbackQuery):
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏."""
    await bot.answer_callback_query(callback_query.id)
    
    # –°—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    await choose_geo_for_recreate(callback_query)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏
async def choose_geo_for_recreate(callback_query: types.CallbackQuery):
    """–í—ã–±–æ—Ä –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    await bot.answer_callback_query(callback_query.id)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ–æ–ª–æ–∫–∞—Ü–∏–π
    geolocations = await get_available_geolocations()
    
    if not geolocations:
        await bot.edit_message_text(
            "‚ö†Ô∏è <b>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ–æ–ª–æ–∫–∞—Ü–∏–π</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            parse_mode=ParseMode.HTML
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = callback_query.from_user.id
    config = await get_user_config(user_id)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
    current_geo_id = None
    current_geo_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    if config and "geolocation_id" in config:
        current_geo_id = config.get("geolocation_id")
        for geo in geolocations:
            if geo.get('id') == current_geo_id:
                current_geo_name = geo.get('name')
                break
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è–º–∏
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    for geo in geolocations:
        geo_id = geo.get('id')
        geo_name = geo.get('name')
        server_count = geo.get('active_servers_count', 0)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ (–ø–æ–º–µ—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞—Ü–∏—é)
        if geo_id == current_geo_id:
            button_text = f"‚úÖ {geo_name} ({server_count} —Å–µ—Ä–≤–µ—Ä–æ–≤)"
        else:
            button_text = f"{geo_name} ({server_count} —Å–µ—Ä–≤–µ—Ä–æ–≤)"
        
        keyboard.add(
            InlineKeyboardButton(button_text, callback_data=f"recreate_geo_{geo_id}")
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    keyboard.add(
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_recreate")
    )
    
    await bot.edit_message_text(
        f"üåç <b>–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –¥–ª—è –≤–∞—à–µ–≥–æ VPN</b>\n\n"
        f"–û—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏—Ç —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.\n\n"
        f"–¢–µ–∫—É—â–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{current_geo_name}</b>\n\n"
        f"–ü—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–∞—à–∞ –Ω–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–µ–π.",
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        parse_mode=ParseMode.HTML,
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏
async def select_geo_for_recreate(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è."""
    await bot.answer_callback_query(callback_query.id)
    
    # –ü–æ–ª—É—á–∞–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–∑ callback_data
    geolocation_id = int(callback_query.data.split('_')[2])
    user_id = callback_query.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    geolocations = await get_available_geolocations()
    selected_geo = None
    
    for geo in geolocations:
        if geo.get('id') == geolocation_id:
            selected_geo = geo
            break
    
    if not selected_geo:
        await bot.edit_message_text(
            "‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏</b>\n\n"
            "–í—ã–±—Ä–∞–Ω–Ω–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            parse_mode=ParseMode.HTML
        )
        return
    
    geo_name = selected_geo.get('name')
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_recreate_{geolocation_id}"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_recreate")
    )
    
    await bot.edit_message_text(
        f"‚ö†Ô∏è <b>–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard</b>\n\n"
        f"–í—ã–±—Ä–∞–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{geo_name}</b>\n\n"
        f"–í–Ω–∏–º–∞–Ω–∏–µ! –ü—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:\n"
        f"‚Ä¢ –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞\n"
        f"‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –Ω–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏\n"
        f"‚Ä¢ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ 7 –¥–Ω–µ–π\n"
        f"‚Ä¢ –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{geo_name}</b>\n\n"
        f"–í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.\n\n"
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:",
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        parse_mode=ParseMode.HTML,
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
async def confirm_recreate_config(callback_query: types.CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    await bot.answer_callback_query(callback_query.id)
    user_id = callback_query.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è
    geolocation_id = None
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º geolocation_id –∏–∑ callback_data, –µ—Å–ª–∏ –æ–Ω —Ç–∞–º –µ—Å—Ç—å
    callback_data = callback_query.data
    parts = callback_data.split('_')
    if len(parts) > 2:
        try:
            geolocation_id = int(parts[2])
        except (ValueError, IndexError):
            geolocation_id = None
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    geo_name = None
    if geolocation_id:
        geolocations = await get_available_geolocations()
        for geo in geolocations:
            if geo.get('id') == geolocation_id:
                geo_name = geo.get('name')
                break
    
    # –ï—Å–ª–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é
    if not geolocation_id:
        config = await get_user_config(user_id)
        if config and "geolocation_id" in config:
            geolocation_id = config.get("geolocation_id")
            geo_name = config.get("geolocation_name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    geo_info = f"\n–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{geo_name}</b>" if geo_name else ""
    
    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è
    await bot.edit_message_text(
        f"üîÑ <b>–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...</b>{geo_info}\n\n"
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.",
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        parse_mode=ParseMode.HTML
    )
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_data = await recreate_config(user_id, geolocation_id=geolocation_id)
        
        if "error" in config_data:
            await bot.edit_message_text(
                f"‚ùå <b>–û—à–∏–±–∫–∞!</b>\n\n{config_data['error']}",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode=ParseMode.HTML
            )
            return
        
        config_text = config_data.get("config_text")
        
        if not config_text:
            await bot.edit_message_text(
                "‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</b>\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode=ParseMode.HTML
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ä–æ–∫–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db_data = await get_user_config(user_id)
        
        expiry_text = ""
        if db_data:
            expiry_time = db_data.get("expiry_time")
            if expiry_time:
                try:
                    expiry_dt = datetime.fromisoformat(expiry_time)
                    expiry_formatted = expiry_dt.strftime("%d.%m.%Y %H:%M:%S")
                    expiry_text = f"‚ñ´Ô∏è –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ <b>{expiry_formatted}</b>\n"
                except (ValueError, TypeError):
                    pass
            
            # –ï—Å–ª–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –±—ã–ª–∞ —É–∫–∞–∑–∞–Ω–∞ —è–≤–Ω–æ, –ø–æ–ª—É—á–∞–µ–º –µ—ë –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            if not geo_name and "geolocation_name" in db_data:
                geo_name = db_data.get("geolocation_name")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
        geo_text = f"‚ñ´Ô∏è –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{geo_name}</b>\n" if geo_name else ""
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_file = BytesIO(config_text.encode('utf-8'))
        config_file.name = f"vpn_duck_{user_id}.conf"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
        qr_buffer = await generate_config_qr(config_text)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏
        await bot.edit_message_text(
            f"‚úÖ <b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞!</b>\n\n"
            f"{geo_text}"
            f"{expiry_text}\n"
            f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ QR-–∫–æ–¥ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.",
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            parse_mode=ParseMode.HTML
        )
        
        if qr_buffer:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
            caption = "üîë <b>QR-–∫–æ–¥ –≤–∞—à–µ–π –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard</b>\n\n"
            if geo_name:
                caption += f"–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{geo_name}</b>\n\n"
            caption += "–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ WireGuard –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
            
            await bot.send_photo(
                user_id,
                qr_buffer,
                caption=caption,
                parse_mode=ParseMode.HTML
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        caption = "üìã <b>–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard</b>\n\n"
        if geo_name:
            caption += f"–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{geo_name}</b>\n\n"
        caption += "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è."
        
        await bot.send_document(
            user_id,
            config_file,
            caption=caption,
            parse_mode=ParseMode.HTML
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        reminder_text = (
            "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</b>\n\n"
            "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö!\n"
            "–°—Ç–∞—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å."
        )
        
        keyboard = InlineKeyboardMarkup(row_width=1)
        keyboard.add(
            InlineKeyboardButton("‚è∞ –ü—Ä–æ–¥–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", callback_data="start_extend")
        )
        
        await bot.send_message(
            user_id,
            reminder_text,
            parse_mode=ParseMode.HTML,
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}", exc_info=True)
        await bot.edit_message_text(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            parse_mode=ParseMode.HTML
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
async def cancel_recreate_config(callback_query: types.CallbackQuery):
    """–û—Ç–º–µ–Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    await bot.answer_callback_query(callback_query.id)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    user_id = callback_query.from_user.id
    config = await get_user_config(user_id)
    
    if config and config.get("active", False):
        try:
            expiry_time = config.get("expiry_time")
            expiry_dt = datetime.fromisoformat(expiry_time)
            expiry_formatted = expiry_dt.strftime("%d.%m.%Y %H:%M:%S")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
            geo_name = config.get("geolocation_name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            geo_text = f"‚ñ´Ô∏è –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: <b>{geo_name}</b>\n" if geo_name else ""
            
            keyboard = InlineKeyboardMarkup(row_width=2)
            keyboard.add(
                InlineKeyboardButton("‚è∞ –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data="start_extend"),
                InlineKeyboardButton("üìã –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥", callback_data="get_config")
            )
            keyboard.add(
                InlineKeyboardButton("üåç –ò–∑–º–µ–Ω–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", callback_data="choose_geo")
            )
            
            await bot.edit_message_text(
                f"‚úÖ <b>–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞</b>\n\n"
                f"{geo_text}"
                f"‚ñ´Ô∏è –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ <b>{expiry_formatted}</b>\n\n"
                f"–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–Ω–æ–≤–∞ "
                f"–∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode=ParseMode.HTML,
                reply_markup=keyboard
            )
        except (ValueError, TypeError):
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞—Ç—ã
            await bot.edit_message_text(
                "‚úÖ <b>–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞</b>\n\n"
                "–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode=ParseMode.HTML
            )
    else:
        await bot.edit_message_text(
            "‚ùå –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id
        )

def register_handlers_recreate(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    dp.register_callback_query_handler(recreate_config_handler, lambda c: c.data == 'recreate_config')
    dp.register_callback_query_handler(choose_geo_for_recreate, lambda c: c.data == 'recreate_choose_geo')
    dp.register_callback_query_handler(select_geo_for_recreate, lambda c: c.data.startswith('recreate_geo_'))
    dp.register_callback_query_handler(confirm_recreate_config, lambda c: c.data.startswith('confirm_recreate'))
    dp.register_callback_query_handler(cancel_recreate_config, lambda c: c.data == 'cancel_recreate')